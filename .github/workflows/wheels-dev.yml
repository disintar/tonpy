name: [DEV] Wheels & Tests & PyPi

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        include:
          - arch: x86_64
            os: Linux
            python: "3.9"
            link: https://github.com/disintar/ton/releases/download/ton-cpython-39-x86_64-linux/
            file: python_ton.cpython-39-x86_64-linux-gnu.so
            fix_tag: manylinux2014_x86_64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}
        env:
          USER: tvorogme

      - name: Install deps
        run: |
          python -m pip install -r built_requirements.txt
          python -m pip install -r requirements.txt

      - name: Download prebuilt
        run: |
          curl -Lo ./src/tonpy/libs/${{ matrix.file }} ${{ matrix.link }}${{ matrix.file }}

      - name: Run tests
        run: |
          pytest

      - name: Build wheel
        run: |
          python -m build --wheel --outdir dist/ .
          python fix_whl_name.py
        env:
          TAG_FIX: ${{ matrix.fix_tag }}
          DEV_PYPI: true
      - name: Store the binary wheel
        uses: actions/upload-artifact@v2
        with:
          name: python-package-distributions
          path: dist

  deploy:
    name: Publish DEV üêçüì¶ to PyPI
    runs-on: Linux
    needs:
      - build

    steps:
      - uses: actions/checkout@v3

      - name: Download all the dists
        uses: actions/download-artifact@v2
        with:
          name: python-package-distributions
          path: dist/

      - name: Install deps
        run: python -m pip install setuptools==68.0.0 build==0.10.0 twine

      - name: Publish distribution üì¶ to PyPi
        run: |
          twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
